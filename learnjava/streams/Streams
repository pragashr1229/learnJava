Streams : 

Stream is conceptually a pipeline, in which elements are computed on demand. 

Stream operations can either be executed sequentially or parallel. when performed parallelly, it is called a parallel stream.

stream is :

Not a data structure
Designed for lambdas
Do not support indexed access
Can easily be aggregated as arrays or lists
Lazy access supported
Parallelizable


Stream vs Collection

Collection - Collection is an in-memory data structure, which holds all the values that the data structure currently has

Stream - it doesnot store any elements & a pipeline



Stream operations are either intermediate or terminal.

terminal operations - return a result of a certain type
intermediate operations - return the stream itself so we can chain multiple methods in a row to perform the operation in multiple steps.


